import { BigNumberish } from "@ethersproject/bignumber";
import { ZkConnectResponse } from "../src";
import { SnarkProof } from "../src/verifier/hydras1-verifier";

type ProofMock = {
  commitmentMapperPubKey: [BigNumberish, BigNumberish];
  destination: {
    commitmentReceipt: [BigNumberish, BigNumberish, BigNumberish];
  };
  source: {
    identifier: string;
    secret: string;
    commitmentReceipt: [BigNumberish, BigNumberish, BigNumberish];
  };
  snarkProof: SnarkProof;
};

export const proofMock1: ProofMock = {
  commitmentMapperPubKey: [
    "3268380547641047729088085784617708493474401130426516096643943726492544573596",
    "15390691699624678165709040191639591743681460873292995904381058558679154201615",
  ],
  destination: {
    commitmentReceipt: [
      "10934565670238922449572159989092188659077211342382484776000758992493740819876",
      "3218011127686482152297047228383554300402866952857213056311157481478905734024",
      "1472291165089697460242374833224315879428808799534234430476462522789355943016",
    ],
  },
  source: {
    identifier: "0x75e480db528101a381ce68544611c169ad7eb342",
    secret: "0",
    commitmentReceipt: [
      "17042384619742417752613292302342669176575592504463083068106261148090087127254",
      "20793424431491213898538790594963464542948138950168822555916870829192294976138",
      "2473740586290245153614028431985174174233064059095963170542484736348579546738",
    ],
  },
  snarkProof: {
    input: [
      "0x0000000000000000000000000000000000515110",
      "0",
      "3268380547641047729088085784617708493474401130426516096643943726492544573596",
      "15390691699624678165709040191639591743681460873292995904381058558679154201615",
      "18284478552824756948592626668826655825533404155480463543923937690555967644745",
      "12786822589994127824749701093763605324296619790438042213808237309267415096862",
      "17454126343505674366184923495825651302639705953414823632900071282704285160660",
      "1",
      "3329898919361930681407018271790995764367328040354924197586754136414189780990",
      "0",
      "13276618409946199128722755397167124523331154512005199930587364387754542281371",
      "327704142977687638962003832165671102458",
      "1",
      "0",
    ],
    a: [
      "10125631126073544323555852301834133422307604821262739457018249298535286682523",
      "2630554852697884100382907250380502635466365480227574841406342194636586910942",
    ],
    b: [
      [
        "6633311629308390335989822222122208762656189256186677505873670989585443361682",
        "20064560768686556553665941025048399790753397384973359571925150368340737655898",
      ],
      [
        "406932771974435454681525329884857166100820992415989350420445256938832237824",
        "12171910319066270601002507521861061541242348189046177584779309617288414938636",
      ],
    ],
    c: [
      "6290293834634847861048810772400401723040702974287125015690380202131417446742",
      "10650081131593867240415268297561350061162495413435536298981502204853462577884",
    ],
  },
};

export const zkConnectResponseMock: ZkConnectResponse = {
  appId: "0xf68985adfc209fafebfb1a956913e7fa",
  namespace: "my-service-name",
  version: "off-chain-1",
  dataRequest: {
    statementRequests: [
      {
        groupId: "0x7c26c2916ebb787af751786923dc67e0",
        groupTimestamp: "latest",
        comparator: "GTE",
        requestedValue: 1,
      },
    ],
    operator: "AND",
  },
  verifiableStatements: [
    {
      groupId: "0x7c26c2916ebb787af751786923dc67e0",
      value: 1,
      groupTimestamp: "latest",
      requestedValue: 1,
      proof: {
        input: [
          "0x0000000000000000000000000000000000515110",
          "0",
          "3268380547641047729088085784617708493474401130426516096643943726492544573596",
          "15390691699624678165709040191639591743681460873292995904381058558679154201615",
          "18284478552824756948592626668826655825533404155480463543923937690555967644745",
          "12786822589994127824749701093763605324296619790438042213808237309267415096862",
          "17454126343505674366184923495825651302639705953414823632900071282704285160660",
          "1",
          "3329898919361930681407018271790995764367328040354924197586754136414189780990",
          "0",
          "13276618409946199128722755397167124523331154512005199930587364387754542281371",
          "327704142977687638962003832165671102458",
          "1",
          "0",
        ],
        a: [
          "791655471412488643240317343594447147297247547218812474781496105154488355052",
          "1091145223275546517565705754305155825020091206303095226179822026898650154659",
        ],
        b: [
          [
            "3515499708011133990748800923294347298824873010607167482144083759722117764433",
            "2153111979044097077589396021779808336459408454765147847373824764046912326666",
          ],
          [
            "15554730721521649689001496841938294483366338685532005283941740774094502151296",
            "5828062801379791329257572731330926234780400943268928999145077291652218708132",
          ],
        ],
        c: [
          "19814858116697943822498176735095620822430974661135231134192005198203867629137",
          "15199421975505113362801844204001331018698290946347168910326612466723343722724",
        ],
      },
    },
  ],
} as ZkConnectResponse;
