import { BigNumberish } from "@ethersproject/bignumber";
import { ZkConnectResponse } from "../src";

type ProofMock = {
  commitmentMapperPubKey: [BigNumberish, BigNumberish];
  destination: {
    commitmentReceipt: [BigNumberish, BigNumberish, BigNumberish];
  };
  source: {
    identifier: string;
    secret: string;
    commitmentReceipt: [BigNumberish, BigNumberish, BigNumberish];
  };
  snarkProof: any;
};

export const proofMock1: ProofMock = {
  commitmentMapperPubKey: [
    "3268380547641047729088085784617708493474401130426516096643943726492544573596",
    "15390691699624678165709040191639591743681460873292995904381058558679154201615",
  ],
  destination: {
    commitmentReceipt: [
      "10934565670238922449572159989092188659077211342382484776000758992493740819876",
      "3218011127686482152297047228383554300402866952857213056311157481478905734024",
      "1472291165089697460242374833224315879428808799534234430476462522789355943016",
    ],
  },
  source: {
    identifier: "0x75e480db528101a381ce68544611c169ad7eb342",
    secret: "0",
    commitmentReceipt: [
      "17042384619742417752613292302342669176575592504463083068106261148090087127254",
      "20793424431491213898538790594963464542948138950168822555916870829192294976138",
      "2473740586290245153614028431985174174233064059095963170542484736348579546738",
    ],
  },
  snarkProof: {
    input: [
      "5329168",
      "0",
      "3268380547641047729088085784617708493474401130426516096643943726492544573596",
      "15390691699624678165709040191639591743681460873292995904381058558679154201615",
      "18842723479429738246940957542769420419574146477922407789765830653118305296077",
      "15577441205306332055325931989411418517707301098017345995017221025629465845584",
      "8972282394841268138633080018831883405423777974665648640910556154949929529300",
      "1",
      "1441663324580546192156355205263195961988190260857585525130097835837963108348",
      "1",
    ],
    a: [
      "4196736981696408709086117209472386403791660536026706959200452407795010156604",
      "10580236049154242771546166284584401854611591853679777784963153391363424691954",
    ],
    b: [
      [
        "21830407776151870670024118581447977151357859514884184106141072711593241127597",
        "9176031632615948628380541651774655423474358409175566600161655728696414402014",
      ],
      [
        "5681414268806358182066702054377689227486911090254536963556758484068123421602",
        "20696263251728531998359123510072866687967761505540730550489315318398013516015",
      ],
    ],
    c: [
      "16981187939803963895177873437103091261521867024828554602853151345947339905502",
      "5791640696146075943241392388778281863220982357101564680314775332054029456965",
    ],
  },
};

export const zkConnectResponseMock: ZkConnectResponse = {
  appId: "0xf68985adfc209fafebfb1a956913e7fa",
  namespace: "my-service-name",
  version: "off-chain-1",
  dataRequest: {
    statementRequests: [
      {
        groupId: "0x7c26c2916ebb787af751786923dc67e0",
        groupTimestamp: "latest",
        requestedValue: 1,
      },
    ],
    operator: "AND",
  },
  verifiableStatements: [
    {
      groupId: "0x7c26c2916ebb787af751786923dc67e0",
      selectedValue: 1,
      groupTimestamp: "latest",
      requestedValue: 1,
      proof: {
        input: [
          "5329168",
          "0",
          "13694022827327392162307984190030265167779463290556240196471372692464680348124",
          "19644872369728090911561801126138671047740635834672788827973600491256736746205",
          "18284478552824756948592626668826655825533404155480463543923937690555967644745",
          "10863215339702931304932908503091022559733650740910400023060133858821451798433",
          "6309534761324871539338983689708099593503383107933868334769739103072693501287",
          "1",
          "12378790528753077450573087649871528477137636995109599554365037893763911909374",
          "0",
        ],
        a: [
          "6630233505228905964309528915871249286398907846855557462517181178518745564092",
          "19549995083857314378538770173523258324234368172828745796667166322016072774452",
        ],
        b: [
          [
            "4084015672304671825448722290760770548582713701533777752447127776633038053227",
            "9712150380049602635466226213450105106817437199522529584826057256473031420519",
          ],
          [
            "8273113926731676338753859808893529640189267349609687633858956896229067595633",
            "20805053814979407493332647015840579923606603497102069825600287091930803084394",
          ],
        ],
        c: [
          "14192138749440300886802197575178987896074035166545631610472483391984354970216",
          "11843632343011935299922669966918179077386026572478347808708157822116397256343",
        ],
      },
    },
  ],
} as ZkConnectResponse;
